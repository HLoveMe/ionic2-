{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/Key-board/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAWA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,iBAAiB,EAAE,MAAM,oBAAoB,CAAC;AACzF,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;;IAYf,4BAAiB;;;;IAU7C,uCAAoB,aAAC,MAAgB,EAAE,gBAA2B,KAAW;IAG7E,uBAAI,kBAAM;IAGV,uBAAI,kBAAM;IAOV,kCAAe,iBAAuB,MAAM,CAAC,EAAE;IAQ/C,kCAAe,iBAAwB,MAAM,CAAC,EAAE;IAOhD,mCAAgB,iBAAwB,MAAM,CAAC,EAAE;IAOjD,mCAAgB,iBAAuB,MAAM,CAAC,EAAE;;gBA9CjD,UAAU;;;QAQR,eAAe;;;;QAEf,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;kDACkC,QAAQ;;wDAAW;;QAE5E,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;wCACd;;QAET,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;;;;wCACd;;QAET,OAAO,CAAC;YACP,KAAK,EAAE,iBAAiB;YACxB,OAAO,EAAE,MAAM;YACf,eAAe,EAAE,IAAI;SACtB,CAAC;;;wCACiB,UAAU;mDAAkB;;QAG9C,OAAO,CAAC;YACP,KAAK,EAAE,iBAAiB;YACxB,OAAO,EAAE,MAAM;YACf,eAAe,EAAE,IAAI;SACtB,CAAC;;;wCACiB,UAAU;mDAAmB;;QAE/C,OAAO,CAAC;YACP,KAAK,EAAE,kBAAkB;YACzB,OAAO,EAAE,MAAM;YACf,eAAe,EAAE,IAAI;SACtB,CAAC;;;wCACkB,UAAU;oDAAmB;;QAEhD,OAAO,CAAC;YACP,KAAK,EAAE,kBAAkB;YACzB,OAAO,EAAE,MAAM;YACf,eAAe,EAAE,IAAI;SACtB,CAAC;;;wCACkB,UAAU;oDAAkB;IA7CrC,QAAQ;QAVpB,MAAM,CAAC;YACN,UAAU,EAAE,UAAU;YACtB,MAAM,EAAE,+BAA+B;;YACvC,SAAS,EAAE,iBAAiB;;YAC5B,IAAI,EAAE,6DAA6D;;YACnE,OAAO,EAAE,EAAE;;YACX,gBAAgB,EAAE,EAAE;;YACpB,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;SACzC,CAAC;OAEW,QAAQ,EA8CpB;mBAvED;EAyB8B,iBAAiB;SAAlC,QAAQ","sourcesContent":["/**\n * This is a template for new plugin wrappers\n *\n * TODO:\n * - Add/Change information below\n * - Document usage (importing, executing main functionality)\n * - Remove any imports that you are not using\n * - Remove all the comments included in this template, EXCEPT the @Plugin wrapper docs and any other docs you added\n * - Remove this note\n *\n */\nimport { Injectable } from '@angular/core';\nimport { Plugin, Cordova, CordovaProperty, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n\n@Plugin({\n  pluginName: 'KeyKoard',\n  plugin: 'cordova-plugin-ionic-keyboard', // npm package name, example: cordova-plugin-camera\n  pluginRef: 'window.Keyboard', // the variable reference to call the plugin, example: navigator.geolocation\n  repo: 'https://github.com/ionic-team/cordova-plugin-ionic-keyboard', // the github repository URL for the plugin\n  install: '', // OPTIONAL install command, in case the plugin requires variables\n  installVariables: [], // OPTIONAL the plugin requires variables\n  platforms: ['Android', 'iOS', 'Windows'] // Array of platforms supported, example: ['Android', 'iOS']\n})\n@Injectable()\nexport class KeyKoard extends IonicNativePlugin {\n  /**\n   * window.addEventListener('keyboardDidHide', () => {});\n   * window.addEventListener('keyboardDidShow', (event) => {});\n   * window.addEventListener('keyboardWillShow', (event) => {});\n   * window.addEventListener('keyboardWillHide', () => {})\n   */\n  @CordovaProperty isVisible: boolean;\n\n  @Cordova({ sync: true })\n  hideFormAccessoryBar(status?: boolean, completeCallback?: Function): void { }\n\n  @Cordova({ sync: true })\n  hide() { }\n\n  @Cordova({ sync: true })\n  show() { }\n\n  @Cordova({\n    event: 'keyboardDidHide',\n    element: window,\n    eventObservable: true\n  })\n  keyboardDidHide(): Observable<void> { return; }\n\n\n  @Cordova({\n    event: 'keyboardDidShow',\n    element: window,\n    eventObservable: true\n  })\n  keyboardDidShow(): Observable<Event> { return; }\n\n  @Cordova({\n    event: 'keyboardWillShow',\n    element: window,\n    eventObservable: true\n  })\n  keyboardWillShow(): Observable<Event> { return; }\n\n  @Cordova({\n    event: 'keyboardWillHide',\n    element: window,\n    eventObservable: true\n  })\n  keyboardWillHide(): Observable<void> { return; }\n}\n"]}